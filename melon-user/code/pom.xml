<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.xx.watermelon</groupId>
        <artifactId>melon-parent</artifactId>
        <relativePath>../../melon-common/code/melon-parent/pom.xml</relativePath>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <groupId>com.xx.watermelon</groupId>
    <artifactId>melon-user</artifactId>
    <version>${user_pro_version}</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--docker镜像前缀-->
        <docker.image.prefix>com-xx-watermelon</docker.image.prefix>

    </properties>

    <dependencies>
        <!-- 引入公共工程 -->
        <dependency>
            <groupId>com.xx.watermelon</groupId>
            <artifactId>melon-common</artifactId>
            <version>${common_pro_version}</version>
        </dependency>
        <!-- 引入实体工程 -->
        <dependency>
            <groupId>com.xx.watermelon</groupId>
            <artifactId>melon-facade</artifactId>
            <version>${facade_pro_version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- 表示依赖不会传递 -->
        </dependency>

    </dependencies>

    <!--子项目配置信息-->
    <profiles>


    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <!--mybatis_generator-->
            <!--<plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                &lt;!&ndash; 数据库驱动  &ndash;&gt;
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>
                &lt;!&ndash; 自动生成 &ndash;&gt;
                <executions>
                    <execution>
                        <id>Generate MyBatis Artifacts</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            &lt;!&ndash; 指定文件位置好像不起作用，始终默认读取src/main/resources/generatorConfig.xml文件 &ndash;&gt;
                            <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                            &lt;!&ndash;允许移动生成的文件&ndash;&gt;
                            <verbose>true</verbose>
                            &lt;!&ndash;允许覆盖生成的文件&ndash;&gt;
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!--docker maven plugin-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
        <!--让在src下的资源也能加载到classes目录-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>