<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xx.watermelon</groupId>
    <artifactId>melon-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!--项目分发配置-->
    <distributionManagement>
        <!--部署项目产生的构件到远程仓库需要的信息 -->
        <repository>
            <id>maven-releases</id>
            <name>maven-releases</name>
            <url>http://112.74.189.171:8084/repository/maven-releases</url>
        </repository>
        <!--构件的快照部署到哪里,如果没有配置该元素，默认部署到repository元素配置的仓库 -->
        <snapshotRepository>
            <id>maven-snapshots</id>
            <name>maven-snapshots</name>
            <url>http://112.74.189.171:8084/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>../melon-common</module>
        <module>../melon-facade</module>
        <module>../../../melon-log/code/</module>
        <module>../../../melon-user/code/</module>
        <module>../../../melon-bigdata/code/</module>
        <module>../../../melon-study/code/</module>
        <module>../../../melon-oss/code/</module>
        <module>../../../melon-poxiao/code/</module>
        <module>../../../eureka-server/code/</module>
    </modules>

    <properties>
        <!--各子项目版本号-->
        <common_pro_version>0.0.1-SNAPSHOT</common_pro_version>
        <facade_pro_version>0.0.1-SNAPSHOT</facade_pro_version>
        <log_pro_version>0.0.1-SNAPSHOT</log_pro_version>
        <user_pro_version>0.0.1-SNAPSHOT</user_pro_version>
        <oss_pro_version>0.0.1-SNAPSHOT</oss_pro_version>
        <bigdata_pro_version>0.0.1-SNAPSHOT</bigdata_pro_version>
        <study_pro_version>0.0.1-SNAPSHOT</study_pro_version>
        <poxiao_pro_version>0.0.1-SNAPSHOT</poxiao_pro_version>
        <eurekaServer_pro_version>0.0.1-SNAPSHOT</eurekaServer_pro_version>

        <!--其他包属性-->

    </properties>

    <!--Spring Boot-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.2.RELEASE</version>
    </parent>

    <!--拉取SpringCloud的包-->
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!--注意dependencyManagement 和 dependencies 的区别-->
    <!--dependencyManagement如果子项目不声明，则不会引用，dependencies则是子项目不声明自动引用-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.SR4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--MyBatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!--Druid-->
            <!--springboot 默认使用hikari-->
            <!--<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.9</version>
            </dependency>-->
            <!--公共工具依赖-->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.2</version>
            </dependency>
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>2.0</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.3.1</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.7</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>26.0-jre</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>3.3.0</version>
            </dependency>
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>2.5.1</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>1.54</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>5.5.13</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <!--所有应用公共的依赖-->
    <dependencies>
        <!--Spring Boot web工具包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--避免日志冲突-->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--JUnit springBoot自带-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>




    </dependencies>

    <build>
        <!--如果加springboot的编译插件，会编译失败-->

        <!--让在src下的资源也能加载到classes目录-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>